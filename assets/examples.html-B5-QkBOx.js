import{_ as a,c as n,a as e,o as l}from"./app-BK6XPxGh.js";const t={};function p(o,s){return l(),n("div",null,s[0]||(s[0]=[e(`<h1 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h1><h2 id="basics" tabindex="-1"><a class="header-anchor" href="#basics"><span>Basics</span></a></h2><h3 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world"><span>Hello, World!</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> pyswip <span class="token keyword">import</span> Prolog</span>
<span class="line">p <span class="token operator">=</span> Prolog<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">p<span class="token punctuation">.</span>assertz<span class="token punctuation">(</span><span class="token string">&quot;foo(bar, zoo)&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Prolog:</p><div class="language-prolog line-numbers-mode" data-highlighter="prismjs" data-ext="prolog" data-title="prolog"><pre><code><span class="line"><span class="token function">foo</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> zoo<span class="token punctuation">)</span><span class="token operator">.</span></span>
<span class="line"><span class="token function">parent</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">)</span> <span class="token operator">:-</span></span>
<span class="line">    <span class="token function">child</span><span class="token punctuation">(</span>Y<span class="token punctuation">,</span> X<span class="token punctuation">)</span><span class="token operator">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const c=a(t,[["render",p],["__file","examples.html.vue"]]),r=JSON.parse('{"path":"/examples.html","title":"Examples","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Basics","slug":"basics","link":"#basics","children":[{"level":3,"title":"Hello, World!","slug":"hello-world","link":"#hello-world","children":[]}]}],"git":{"updatedTime":1728592892000,"contributors":[{"name":"Yuce Tekol","email":"yucetekol@gmail.com","commits":1}]},"filePathRelative":"examples.md"}');export{c as comp,r as data};
